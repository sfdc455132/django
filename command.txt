git version 查看版本
git config --global user.name sfdc455132 設定使用者名稱
git config --global user.email sfdc455132@gmail.com 設定使用者EMAIL
git config --list 查看CONFIG 資訊


git init 指令控管 

git status 查看控管狀態
git add <檔案名稱> 增加要被控管的檔案
git add . 增加所有檔案控管

git restore --staged <檔案名稱> 將檔案退出站存區(取消控管)
			或是 刪除倉庫區之檔案

git restore <檔案名稱> 復原檔案


git rm <檔案名稱>
git rm --cached <檔案名稱>  刪除檔案  (無需做確認動作)
git rm -f <檔案名稱>


git cat-file -t <檔案名稱> 查看檔案類型
git cat-file -p <檔案名稱> 查看檔案內容
git cat-file -s <檔案名稱> 查看檔案大小

git ls-file -s 查看目前暫存區檔案

git commit -m <註解> 將目前控管之檔案送入倉庫區 
git commit -am <註解> 將以放入過倉庫之檔案 直接更新並註解
git commit --amend 將這次commit 加入前次commit 並可修改註解

git rm <檔案名稱> 從倉儲區刪除檔案 需COMMIT確認
git rm cached <檔案名稱> 從暫存區/倉儲區恢復檔案至未控管
git rm f <檔案名稱> 從暫存區刪除檔案 

git log 查詢倉庫區歷程
git log --oneline 查詢倉庫區歷程(簡化)
git log 2 查詢倉庫區歷程(兩筆資料)
git log before='2021 09 15’檢視區間日期資料
git log shortlog 查詢倉庫區歷程(查看註解)
git log stat 修改註解
git log --graph 查看樹狀圖

git relog 查看所有歷程操作

git diff 查看當下宿改過的內容

git branch 確認當前分株狀態
git branch <名稱> 新增分支
git merge <名稱> 合併分支
git branch -D <名稱> 刪除分支
git branch -a 顯示遠端分支
git branch -vv 檢視遠端分支狀況

git checkout -b <名稱> 新增並切換分支
git checkout <名稱> 切換分支
git checkout <commit編碼前6碼> 切換至之前紀錄點

git reset <commit編碼前6碼> 恢復至之前紀錄點(新增及修改會留著)
git reset --soft <commit編碼前6碼> 恢復至之前紀錄點(新增及修改會留著)
git reset --hard <commit編碼前6碼> 恢復至之前紀錄點(新增及修改不會留著)
git reset --hard HEAD~ 恢復至上一個紀錄點
git reset --hard HEAD~1 恢復至上兩個個紀錄點
git reset ORIG_HEAD 取消這次恢復

git revert <commit編碼前6碼> 恢復到該紀錄但保留修改(可減少COMMIT列表數)

git clone <url> 複製GITHUB(包含.git)

git push 將本地端推去遠端
git push origin master -f 強制更新遠端
git push delete origin <分支> 遠端分支的刪除 


git remote show origin 印出遠端倉庫資訊
git remote remove origin 移除遠端 origin
git remote add origin <url> 新增倉庫名稱



git pull 將遠端拉回本地
git fecth 確認修改部分
git fetch -prune 遠程分支刪除後，需要的指令
git merge 合併













